USE student_management
GO
CREATE PROCEDURE GetStudentGrades
	@ClassroomId INT,
    @Semester INT
AS
BEGIN

DECLARE @GradeTableSemester table(id int, Lastname varchar(MAX), FirstName varchar(Max),
							Semester int, SubjectName varchar(MAX), Grade real)

INSERT INTO @GradeTableSemester
		SELECT
				s.Id,
				s.Lastname,
				s.FirstName,
				sgs.Semester as Semester,
				sj.Name AS SubjectName,
				ROUND((CASE 
					WHEN COUNT(ng.Score) = COUNT(*) THEN SUM(ng.Score * ng.Factor)
					ELSE NULL
				END + MAX(fg.Score) * 3) / (SUM(ng.Factor) + 3), 2) AS Grade
			
			FROM 
				Students s
			INNER JOIN 
				ClassroomStudent cs ON s.Id = cs.StudentsId
			INNER JOIN 
				Classrooms c ON c.Id = cs.ClassroomsId
			INNER JOIN 
				Teaches t ON c.Id = t.ClassroomId
			INNER JOIN 
				Subjects sj ON t.SubjectId = sj.Id
			FULL JOIN 
				SubjectGrades sg ON t.Id = sg.TeachId AND sg.StudentId = s.Id 
			FULL JOIN 
			SubjectGradeSemesters sgs ON sg.Id = sgs.SubjectGradeId
			FULL JOIN 
				NormalGrades ng ON sgs.Id = ng.SubjectGradeSemesterId
			FULL JOIN 
				FinalGrades fg ON sgs.Id = fg.SubjectGradeSemesterId
			WHERE 
				c.Id = @ClassroomId
			GROUP BY 
				s.Id, s.Lastname, s.FirstName, sj.Name, sj.Id, sgs.Semester;

CREATE TABLE #GradeTable (
    Id INT,
    Lastname NVARCHAR(MAX),
    FirstName NVARCHAR(MAX),
    SubjectName NVARCHAR(MAX),
    Grade real
);

IF (@Semester <> 0)
	INSERT INTO #GradeTable
	SELECT Id, Lastname, FirstName, SubjectName, Grade
	FROM @GradeTableSemester
	WHERE Semester=@Semester
	group by Id, LastName, FirstName, SubjectName, Grade
ELSE
	INSERT INTO #GradeTable
	SELECT Id, Lastname, FirstName, SubjectName, ROUND(SUM(Grade * Semester)/3, 2) as Grade
	FROM @GradeTableSemester
	group by Id, LastName, FirstName, SubjectName


DECLARE @subjectName NVARCHAR(MAX);

SELECT @subjectName = COALESCE(@subjectName + ', ', '') + s.Name
FROM Classrooms c
JOIN Teaches t on t.ClassroomId=c.Id
JOIN Subjects s on t.SubjectId=s.Id
WHERE c.Id= @ClassroomId;

DECLARE @query nvarchar(MAX);
SET @query = '
SELECT *
FROM (
	SELECT *,
	ROUND(CASE WHEN EXISTS (SELECT 1 FROM #GradeTable g WHERE g.Id=gt.Id AND g.Grade IS NULL) THEN NULL
				ELSE (AVG(Grade) OVER (PARTITION BY Id))
			END, 2) AS OverallGrade
	FROM #GradeTable gt
		
) AS src
PIVOT (
    MAX(Grade)
    FOR SubjectName IN (' + @subjectName + ')
) AS pvt
'
EXEC sp_executeSQL @query
DROP TABLE #GradeTable
END;